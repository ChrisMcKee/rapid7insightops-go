/*
InsightOps REST API

### Overview  Our REST API lets you use InsightOps through HTTP requests. Currently, the REST API allows you to perform the majority of the actions available through the UI, and has some additional functionality that is not available through the UI. You may use this API to automate common tasks (for example, via shell scripts), and to generally interact with InsightOps programmatically.  This page precisely describes the REST API and serves as a reference for the API. Each HTTP method and each URL endpoint is documented in a self-contained unit so that users only need to read about the HTTP methods relevant to them.  ### Terminology  * A **log entry** is an individual log event. * A **log** is a collection of log entries, or a single log stream. * A **log set** is a logical-only collection of logs, i.e. logs can be in multiple logsets and deleting a logset only deletes the relation between logs, not the logs themselves. * [Log Entry Query Language](https://docs.rapid7.com/insightops/log-search) (**LEQL**) is the query language used in Insight Ops to search log data.

API version: latest
Contact: support@rapid7.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package insightops

import (
	"encoding/json"
)

// checks if the ActionResponseAnomaly type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionResponseAnomaly{}

// ActionResponseAnomaly struct for ActionResponseAnomaly
type ActionResponseAnomaly struct {
	// The ID of the notification.
	Id *string `json:"id,omitempty"`
	// The maximum number of notifications that will be triggered within a window of time, controlled by the `min_report_period` parameter.
	MinReportCount  *int32      `json:"min_report_count,omitempty"`
	MinReportPeriod *PeriodEnum `json:"min_report_period,omitempty"`
	// The list of notification targets for this notification.
	Targets []TargetResponse `json:"targets,omitempty"`
	// \\ When set to true, the notification is enabled. When set to false, the notification is disabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Always set to \"Alert\".
	Type *string `json:"type,omitempty"`
}

// NewActionResponseAnomaly instantiates a new ActionResponseAnomaly object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionResponseAnomaly() *ActionResponseAnomaly {
	this := ActionResponseAnomaly{}
	var minReportCount int32 = 1
	this.MinReportCount = &minReportCount
	var minReportPeriod PeriodEnum = PeriodEnum(HOUR)
	this.MinReportPeriod = &minReportPeriod
	return &this
}

// NewActionResponseAnomalyWithDefaults instantiates a new ActionResponseAnomaly object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionResponseAnomalyWithDefaults() *ActionResponseAnomaly {
	this := ActionResponseAnomaly{}
	var minReportCount int32 = 1
	this.MinReportCount = &minReportCount
	var minReportPeriod PeriodEnum = PeriodEnum(HOUR)
	this.MinReportPeriod = &minReportPeriod
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActionResponseAnomaly) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseAnomaly) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActionResponseAnomaly) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ActionResponseAnomaly) SetId(v string) {
	o.Id = &v
}

// GetMinReportCount returns the MinReportCount field value if set, zero value otherwise.
func (o *ActionResponseAnomaly) GetMinReportCount() int32 {
	if o == nil || IsNil(o.MinReportCount) {
		var ret int32
		return ret
	}
	return *o.MinReportCount
}

// GetMinReportCountOk returns a tuple with the MinReportCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseAnomaly) GetMinReportCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MinReportCount) {
		return nil, false
	}
	return o.MinReportCount, true
}

// HasMinReportCount returns a boolean if a field has been set.
func (o *ActionResponseAnomaly) HasMinReportCount() bool {
	if o != nil && !IsNil(o.MinReportCount) {
		return true
	}

	return false
}

// SetMinReportCount gets a reference to the given int32 and assigns it to the MinReportCount field.
func (o *ActionResponseAnomaly) SetMinReportCount(v int32) {
	o.MinReportCount = &v
}

// GetMinReportPeriod returns the MinReportPeriod field value if set, zero value otherwise.
func (o *ActionResponseAnomaly) GetMinReportPeriod() PeriodEnum {
	if o == nil || IsNil(o.MinReportPeriod) {
		var ret PeriodEnum
		return ret
	}
	return *o.MinReportPeriod
}

// GetMinReportPeriodOk returns a tuple with the MinReportPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseAnomaly) GetMinReportPeriodOk() (*PeriodEnum, bool) {
	if o == nil || IsNil(o.MinReportPeriod) {
		return nil, false
	}
	return o.MinReportPeriod, true
}

// HasMinReportPeriod returns a boolean if a field has been set.
func (o *ActionResponseAnomaly) HasMinReportPeriod() bool {
	if o != nil && !IsNil(o.MinReportPeriod) {
		return true
	}

	return false
}

// SetMinReportPeriod gets a reference to the given PeriodEnum and assigns it to the MinReportPeriod field.
func (o *ActionResponseAnomaly) SetMinReportPeriod(v PeriodEnum) {
	o.MinReportPeriod = &v
}

// GetTargets returns the Targets field value if set, zero value otherwise.
func (o *ActionResponseAnomaly) GetTargets() []TargetResponse {
	if o == nil || IsNil(o.Targets) {
		var ret []TargetResponse
		return ret
	}
	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseAnomaly) GetTargetsOk() ([]TargetResponse, bool) {
	if o == nil || IsNil(o.Targets) {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *ActionResponseAnomaly) HasTargets() bool {
	if o != nil && !IsNil(o.Targets) {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []TargetResponse and assigns it to the Targets field.
func (o *ActionResponseAnomaly) SetTargets(v []TargetResponse) {
	o.Targets = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ActionResponseAnomaly) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseAnomaly) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ActionResponseAnomaly) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ActionResponseAnomaly) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ActionResponseAnomaly) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseAnomaly) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ActionResponseAnomaly) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ActionResponseAnomaly) SetType(v string) {
	o.Type = &v
}

func (o ActionResponseAnomaly) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionResponseAnomaly) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MinReportCount) {
		toSerialize["min_report_count"] = o.MinReportCount
	}
	if !IsNil(o.MinReportPeriod) {
		toSerialize["min_report_period"] = o.MinReportPeriod
	}
	if !IsNil(o.Targets) {
		toSerialize["targets"] = o.Targets
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableActionResponseAnomaly struct {
	value *ActionResponseAnomaly
	isSet bool
}

func (v NullableActionResponseAnomaly) Get() *ActionResponseAnomaly {
	return v.value
}

func (v *NullableActionResponseAnomaly) Set(val *ActionResponseAnomaly) {
	v.value = val
	v.isSet = true
}

func (v NullableActionResponseAnomaly) IsSet() bool {
	return v.isSet
}

func (v *NullableActionResponseAnomaly) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionResponseAnomaly(val *ActionResponseAnomaly) *NullableActionResponseAnomaly {
	return &NullableActionResponseAnomaly{value: val, isSet: true}
}

func (v NullableActionResponseAnomaly) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionResponseAnomaly) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
