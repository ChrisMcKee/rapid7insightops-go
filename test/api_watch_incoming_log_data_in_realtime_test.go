/*
InsightOps REST API

Testing WatchIncomingLogDataInRealtimeAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package insightops

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/chrismckee/rapid7insightops-go"
)

func Test_insightops_WatchIncomingLogDataInRealtimeAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test WatchIncomingLogDataInRealtimeAPIService GetLiveLogs", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var logKeys string

		resp, httpRes, err := apiClient.WatchIncomingLogDataInRealtimeAPI.GetLiveLogs(context.Background(), logKeys).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WatchIncomingLogDataInRealtimeAPIService LiveSavedQuery", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var savedQueryId string

		resp, httpRes, err := apiClient.WatchIncomingLogDataInRealtimeAPI.LiveSavedQuery(context.Background(), savedQueryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WatchIncomingLogDataInRealtimeAPIService LiveSavedQueryNoLogs", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var logKeys string
		var savedQueryId string

		resp, httpRes, err := apiClient.WatchIncomingLogDataInRealtimeAPI.LiveSavedQueryNoLogs(context.Background(), logKeys, savedQueryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WatchIncomingLogDataInRealtimeAPIService PollLiveTail", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.WatchIncomingLogDataInRealtimeAPI.PollLiveTail(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WatchIncomingLogDataInRealtimeAPIService PostLiveLogs", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.WatchIncomingLogDataInRealtimeAPI.PostLiveLogs(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
